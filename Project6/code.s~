.data
printstr: .asciz "%d\n"
.text
.globl Main_main
class0_f0:
push %ebp
mov %esp, %ebp
sub $12, %esp
push $0
pop %edx
mov %edx,-8(%ebp)
push $255
push $207
pop %ebx
pop %eax
cdq
idiv %ebx
push %eax
pop %edx
mov %edx,-4(%ebp)
push $189
pop %edx
mov %edx,-12(%ebp)
push $225
pop %eax
leave
ret
class0_f1:
push %ebp
mov %esp, %ebp
sub $24, %esp
push $22
pop %edx
mov %edx,-8(%ebp)
push $227
push $46
pop %edx
pop %eax
add %edx, %eax
push %eax
pop %edx
mov %edx,-4(%ebp)
push $254
push $215
pop %edx
pop %eax
sub %edx, %eax
push %eax
pop %edx
mov %edx,-16(%ebp)
push $166
pop %edx
mov %edx,-12(%ebp)
push $0
pop %eax
xor $1, %eax
push %eax
pop %eax
cmp $0,  %eax
je label_0
push $240
pop %edx
mov %edx,-4(%ebp)
push 16(%ebp)
push 8(%ebp)
call class0_f0
pop %edx
pop %edx
push %eax
push $printstr
call printf
push $10
pop %edx
mov %edx,-20(%ebp)
label_2:
push -20(%ebp)
push $130
pop %edx
pop %eax
cmp %edx, %eax
jl label_4
push $0
jmp label_5
label_4:
push $1
label_5:
pop %eax
cmp $0, %eax
je label_3
push -20(%ebp)
push $5
pop %eax
neg %eax
push %eax
pop %edx
pop %eax
sub %edx, %eax
push %eax
pop %edx
mov %edx,-20(%ebp)
push $86
pop %edx
mov %edx,-24(%ebp)
label_6:
push -24(%ebp)
push $158
pop %edx
pop %eax
cmp %edx, %eax
jl label_8
push $0
jmp label_9
label_8:
push $1
label_9:
pop %eax
cmp $0, %eax
je label_7
push -24(%ebp)
push $8
pop %eax
neg %eax
push %eax
pop %edx
pop %eax
sub %edx, %eax
push %eax
pop %edx
mov %edx,-24(%ebp)
push $5
push $printstr
call printf
jmp label_6
label_7:
push $168
pop %edx
mov %edx,-12(%ebp)
push $113
pop %edx
mov %edx,-16(%ebp)
jmp label_2
label_3:
jmp label_1
label_0:
label_1:
push $0
pop %eax
leave
ret
class0_f2:
push %ebp
mov %esp, %ebp
sub $12, %esp
push $0
pop %eax
xor $1, %eax
push %eax
pop %edx
mov %edx,-8(%ebp)
push $39
pop %edx
mov %edx,-4(%ebp)
push $30
pop %edx
mov %edx,-12(%ebp)
push $1
pop %eax
cmp $0,  %eax
je label_10
push $147
push $printstr
call printf
jmp label_11
label_10:
push $0
push $0
pop %edx
pop %eax
or %edx, %eax
push %eax
push $printstr
call printf
push -8(%ebp)
pop %edx
mov %edx,-8(%ebp)
label_11:
leave
ret
class0_f3:
push %ebp
mov %esp, %ebp
sub $12, %esp
push $0
pop %edx
mov %edx,-4(%ebp)
push -4(%ebp)
pop %eax
cmp $0,  %eax
je label_12
push 12(%ebp)
push 12(%ebp)
mov 8(%ebp), %eax
push 0(%eax)
pop %edx
pop %eax
add %edx, %eax
push %eax
push $100
mov 8(%ebp), %eax
push 4(%eax)
pop %ebx
pop %eax
cdq
idiv %ebx
push %eax
push 8(%ebp)
call class0_f1
pop %edx
pop %edx
pop %edx
pop %edx
push %eax
pop %edx
mov %edx,-4(%ebp)
mov 8(%ebp), %eax
push 0(%eax)
push 12(%ebp)
pop %edx
pop %eax
sub %edx, %eax
push %eax
push $printstr
call printf
jmp label_13
label_12:
label_13:
push $1
push $0
pop %edx
pop %eax
and %edx, %eax
push %eax
pop %eax
cmp $0,  %eax
je label_14
mov 8(%ebp), %eax
push 0(%eax)
push $printstr
call printf
push $81
pop %eax
neg %eax
push %eax
pop %edx
mov %edx,-8(%ebp)
label_16:
push -8(%ebp)
push $126
pop %edx
pop %eax
cmp %edx, %eax
jl label_18
push $0
jmp label_19
label_18:
push $1
label_19:
pop %eax
cmp $0, %eax
je label_17
push -8(%ebp)
push $9
pop %edx
pop %eax
add %edx, %eax
push %eax
pop %edx
mov %edx,-8(%ebp)
mov 8(%ebp), %eax
push 0(%eax)
push $printstr
call printf
jmp label_16
label_17:
mov 8(%ebp), %eax
push 4(%eax)
mov 8(%ebp), %eax
push 4(%eax)
push $37
push 8(%ebp)
call class0_f1
pop %edx
pop %edx
pop %edx
pop %edx
push %eax
pop %eax
cmp $0,  %eax
je label_20
push $47
push $printstr
call printf
push $0
push $printstr
call printf
jmp label_21
label_20:
push $71
pop %eax
neg %eax
push %eax
pop %edx
mov %edx,-12(%ebp)
label_22:
push -12(%ebp)
push $10
pop %edx
pop %eax
cmp %edx, %eax
jle label_24
push $0
jmp label_25
label_24:
push $1
label_25:
pop %eax
cmp $0, %eax
je label_23
push -12(%ebp)
push $3
pop %ebx
pop %eax
imul %ebx, %eax
push %eax
pop %edx
mov %edx,-12(%ebp)
mov 8(%ebp), %eax
push 8(%eax)
pop %edx
mov %edx,-4(%ebp)
push $247
push $241
pop %edx
pop %eax
sub %edx, %eax
push %eax
push 12(%ebp)
pop %edx
pop %eax
cmp %edx, %eax
je label_28
push $0
jmp label_29
label_28:
push $1
label_29:
pop %eax
cmp $0,  %eax
je label_26
push -4(%ebp)
pop %edx
mov %edx,-4(%ebp)
jmp label_27
label_26:
push $1
pop %edx
mov %edx,-4(%ebp)
mov 8(%ebp), %eax
push 12(%eax)
push $0
pop %edx
pop %eax
and %edx, %eax
push %eax
pop %eax
cmp $0,  %eax
je label_30
push $150
push $72
pop %edx
pop %eax
cmp %edx, %eax
jle label_32
push $0
jmp label_33
label_32:
push $1
label_33:
push $printstr
call printf
jmp label_31
label_30:
label_31:
label_27:
mov 8(%ebp), %eax
push 4(%eax)
push $197
mov 8(%ebp), %eax
push 4(%eax)
pop %ebx
pop %eax
imul %ebx, %eax
push %eax
mov 8(%ebp), %eax
push 4(%eax)
push 8(%ebp)
call class0_f2
pop %edx
pop %edx
pop %edx
pop %edx
jmp label_22
label_23:
push $0
push -4(%ebp)
mov 8(%ebp), %eax
push 12(%eax)
pop %edx
pop %eax
and %edx, %eax
push %eax
pop %edx
pop %eax
or %edx, %eax
push %eax
push $printstr
call printf
label_21:
jmp label_15
label_14:
label_15:
push $0
pop %eax
xor $1, %eax
push %eax
push $printstr
call printf
mov 8(%ebp), %eax
push 0(%eax)
push $printstr
call printf
mov 8(%ebp), %eax
push 0(%eax)
pop %eax
leave
ret
class0_f4:
push %ebp
mov %esp, %ebp
sub $24, %esp
push $1
push $1
pop %edx
pop %eax
and %edx, %eax
push %eax
pop %edx
mov %edx,-24(%ebp)
push $37
pop %edx
mov %edx,-20(%ebp)
push $217
push $124
pop %ebx
pop %eax
imul %ebx, %eax
push %eax
pop %edx
mov %edx,-8(%ebp)
push $11
pop %eax
neg %eax
push %eax
pop %edx
mov %edx,-4(%ebp)
push $198
pop %edx
mov %edx,-16(%ebp)
push $199
push $207
pop %edx
pop %eax
sub %edx, %eax
push %eax
push $137
pop %edx
pop %eax
add %edx, %eax
push %eax
pop %edx
mov %edx,-12(%ebp)
push $1
push $printstr
call printf
push -4(%ebp)
push $111
push $119
push $149
pop %edx
pop %eax
sub %edx, %eax
push %eax
push 8(%ebp)
call class0_f2
pop %edx
pop %edx
pop %edx
pop %edx
push $233
push -4(%ebp)
push -8(%ebp)
push 8(%ebp)
call class0_f2
pop %edx
pop %edx
pop %edx
pop %edx
push -16(%ebp)
push $printstr
call printf
leave
ret
class0_class0:
push %ebp
mov %esp, %ebp
sub $20, %esp
push $160
pop %edx
mov 8(%ebp), %eax
mov %edx, 4(%eax)
push $165
push $20
pop %edx
pop %eax
sub %edx, %eax
push %eax
pop %edx
mov 8(%ebp), %eax
mov %edx, 0(%eax)
push $119
push $219
pop %edx
pop %eax
sub %edx, %eax
push %eax
push $237
pop %edx
pop %eax
cmp %edx, %eax
jle label_34
push $0
jmp label_35
label_34:
push $1
label_35:
pop %edx
mov 8(%ebp), %eax
mov %edx, 12(%eax)
push $1
pop %edx
mov 8(%ebp), %eax
mov %edx, 8(%eax)
push $132
pop %edx
mov %edx,-20(%ebp)
push $214
push $162
pop %ebx
pop %eax
cdq
idiv %ebx
push %eax
push $223
pop %edx
pop %eax
cmp %edx, %eax
jl label_36
push $0
jmp label_37
label_36:
push $1
label_37:
pop %edx
mov %edx,-8(%ebp)
push $163
push $202
pop %edx
pop %eax
add %edx, %eax
push %eax
push $154
pop %edx
pop %eax
add %edx, %eax
push %eax
pop %edx
mov %edx,-4(%ebp)
push $109
push $168
pop %ebx
pop %eax
cdq
idiv %ebx
push %eax
pop %edx
mov %edx,-16(%ebp)
push $39
push $175
pop %edx
pop %eax
cmp %edx, %eax
je label_38
push $0
jmp label_39
label_38:
push $1
label_39:
pop %edx
mov %edx,-12(%ebp)
push $126
push -20(%ebp)
pop %ebx
pop %eax
cdq
idiv %ebx
push %eax
pop %edx
mov %edx,-16(%ebp)
leave
ret
class1_f5:
push %ebp
mov %esp, %ebp
sub $20, %esp
push $254
push $48
pop %ebx
pop %eax
cdq
idiv %ebx
push %eax
push $181
pop %ebx
pop %eax
cdq
idiv %ebx
push %eax
pop %edx
mov %edx,-20(%ebp)
push $134
pop %eax
neg %eax
push %eax
pop %edx
mov %edx,-8(%ebp)
push $208
pop %eax
neg %eax
push %eax
pop %edx
mov %edx,-4(%ebp)
push $181
pop %edx
mov %edx,-16(%ebp)
push $144
push $76
pop %edx
pop %eax
sub %edx, %eax
push %eax
pop %edx
mov %edx,-12(%ebp)
push -20(%ebp)
push $printstr
call printf
push $1
push 20(%ebp)
call class0_f4
pop %edx
pop %edx
mov 8(%ebp), %eax
push 32(%eax)
pop %edx
mov %edx,-4(%ebp)
push $0
push 20(%ebp)
call class0_f4
pop %edx
pop %edx
mov 8(%ebp), %eax
push 8(%eax)
push $0
push 16(%ebp)
pop %edx
pop %eax
and %edx, %eax
push %eax
pop %edx
pop %eax
or %edx, %eax
push %eax
pop %eax
leave
ret
class1_f6:
push %ebp
mov %esp, %ebp
sub $12, %esp
push $0
pop %edx
mov %edx,-8(%ebp)
push $117
push $158
pop %edx
pop %eax
cmp %edx, %eax
jle label_40
push $0
jmp label_41
label_40:
push $1
label_41:
pop %edx
mov %edx,-4(%ebp)
push $16
pop %eax
neg %eax
push %eax
pop %edx
mov %edx,-12(%ebp)
push $136
push $249
pop %edx
pop %eax
cmp %edx, %eax
jle label_42
push $0
jmp label_43
label_42:
push $1
label_43:
pop %edx
mov %edx,-8(%ebp)
mov 8(%ebp), %eax
push 12(%eax)
push $printstr
call printf
push $50
pop %edx
mov %edx,-12(%ebp)
push $0
pop %edx
mov %edx,-4(%ebp)
push $162
push $47
pop %edx
pop %eax
add %edx, %eax
push %eax
pop %eax
leave
ret
class1_class1:
push %ebp
mov %esp, %ebp
sub $36, %esp
push $0
push $237
push $224
pop %edx
pop %eax
sub %edx, %eax
push %eax
push 8(%ebp)
call class0_class0
pop %edx
pop %edx
pop %edx
push $10
pop %edx
mov 8(%ebp), %eax
mov %edx, 20(%eax)
push $67
pop %edx
mov 8(%ebp), %eax
mov %edx, 16(%eax)
push $4
push $82
push $68
pop %ebx
pop %eax
cdq
idiv %ebx
push %eax
pop %edx
pop %eax
cmp %edx, %eax
jl label_44
push $0
jmp label_45
label_44:
push $1
label_45:
pop %edx
mov 8(%ebp), %eax
mov %edx, 28(%eax)
push $1
pop %edx
mov 8(%ebp), %eax
mov %edx, 24(%eax)
push $53
push $92
pop %ebx
pop %eax
imul %ebx, %eax
push %eax
pop %edx
mov 8(%ebp), %eax
mov %edx, 32(%eax)
push $71
pop %edx
mov %edx,-4(%ebp)
push 28(%ebp)
pop %edx
mov %edx,-4(%ebp)
mov 8(%ebp), %eax
push 8(%eax)
pop %eax
cmp $0,  %eax
je label_46
push $0
pop %eax
cmp $0,  %eax
je label_48
push $63
pop %edx
mov %edx,-8(%ebp)
label_50:
push -8(%ebp)
push $273
pop %edx
pop %eax
cmp %edx, %eax
jl label_52
push $0
jmp label_53
label_52:
push $1
label_53:
pop %eax
cmp $0, %eax
je label_51
push -8(%ebp)
push $10
pop %edx
pop %eax
add %edx, %eax
push %eax
pop %edx
mov %edx,-8(%ebp)
push $270
pop %edx
mov %edx,-12(%ebp)
label_54:
push $30
push -12(%ebp)
pop %edx
pop %eax
cmp %edx, %eax
jl label_56
push $0
jmp label_57
label_56:
push $1
label_57:
pop %eax
cmp $0, %eax
je label_55
push -12(%ebp)
push $3
pop %ebx
pop %eax
cdq
idiv %ebx
push %eax
pop %edx
mov %edx,-12(%ebp)
push $38
pop %edx
mov %edx,-4(%ebp)
mov 8(%ebp), %eax
push 0(%eax)
push $printstr
call printf
jmp label_54
label_55:
jmp label_50
label_51:
jmp label_49
label_48:
push $154
push $154
pop %edx
pop %eax
cmp %edx, %eax
jle label_60
push $0
jmp label_61
label_60:
push $1
label_61:
pop %eax
cmp $0,  %eax
je label_58
push $196
mov 8(%ebp), %eax
push 0(%eax)
pop %edx
pop %eax
sub %edx, %eax
push %eax
pop %edx
mov %edx,-4(%ebp)
jmp label_59
label_58:
label_59:
push $1
push $printstr
call printf
push -4(%ebp)
push $printstr
call printf
label_49:
jmp label_47
label_46:
label_47:
push $1782
pop %edx
mov %edx,-16(%ebp)
label_62:
push $22
push -16(%ebp)
pop %edx
pop %eax
cmp %edx, %eax
jl label_64
push $0
jmp label_65
label_64:
push $1
label_65:
pop %eax
cmp $0, %eax
je label_63
push -16(%ebp)
push $3
pop %ebx
pop %eax
cdq
idiv %ebx
push %eax
pop %edx
mov %edx,-16(%ebp)
push $66
pop %eax
neg %eax
push %eax
pop %edx
mov %edx,-20(%ebp)
label_66:
push -20(%ebp)
push $50
pop %eax
neg %eax
push %eax
pop %edx
pop %eax
cmp %edx, %eax
jl label_68
push $0
jmp label_69
label_68:
push $1
label_69:
pop %eax
cmp $0, %eax
je label_67
push -20(%ebp)
push $2
pop %ebx
pop %eax
imul %ebx, %eax
push %eax
pop %edx
mov %edx,-20(%ebp)
push 16(%ebp)
mov 8(%ebp), %eax
push 32(%eax)
pop %edx
pop %eax
cmp %edx, %eax
jle label_72
push $0
jmp label_73
label_72:
push $1
label_73:
pop %eax
cmp $0,  %eax
je label_70
push $0
pop %eax
cmp $0,  %eax
je label_74
mov 8(%ebp), %eax
push 12(%eax)
pop %eax
cmp $0,  %eax
je label_76
push $20
pop %edx
mov %edx,-24(%ebp)
label_78:
push $124
pop %eax
neg %eax
push %eax
push -24(%ebp)
pop %edx
pop %eax
cmp %edx, %eax
jl label_80
push $0
jmp label_81
label_80:
push $1
label_81:
pop %eax
cmp $0, %eax
je label_79
push -24(%ebp)
push $6
pop %eax
neg %eax
push %eax
pop %edx
pop %eax
add %edx, %eax
push %eax
pop %edx
mov %edx,-24(%ebp)
mov 8(%ebp), %eax
push 32(%eax)
pop %edx
mov %edx,-4(%ebp)
push 16(%ebp)
push $247
pop %ebx
pop %eax
cdq
idiv %ebx
push %eax
pop %edx
mov %edx,-4(%ebp)
push $2916
pop %edx
mov %edx,-28(%ebp)
label_82:
push $36
push -28(%ebp)
pop %edx
pop %eax
cmp %edx, %eax
jle label_84
push $0
jmp label_85
label_84:
push $1
label_85:
pop %eax
cmp $0, %eax
je label_83
push -28(%ebp)
push $3
pop %ebx
pop %eax
cdq
idiv %ebx
push %eax
pop %edx
mov %edx,-28(%ebp)
push $181
push $114
pop %edx
pop %eax
cmp %edx, %eax
jl label_86
push $0
jmp label_87
label_86:
push $1
label_87:
push $printstr
call printf
jmp label_82
label_83:
jmp label_78
label_79:
push $78
pop %edx
mov %edx,-32(%ebp)
label_88:
push $26
push -32(%ebp)
pop %edx
pop %eax
cmp %edx, %eax
jl label_90
push $0
jmp label_91
label_90:
push $1
label_91:
pop %eax
cmp $0, %eax
je label_89
push -32(%ebp)
push $3
pop %ebx
pop %eax
cdq
idiv %ebx
push %eax
pop %edx
mov %edx,-32(%ebp)
push 28(%ebp)
pop %edx
mov %edx,-4(%ebp)
push $32
pop %eax
neg %eax
push %eax
pop %edx
mov %edx,-36(%ebp)
label_92:
push -36(%ebp)
push $2
pop %eax
neg %eax
push %eax
pop %edx
pop %eax
cmp %edx, %eax
jl label_94
push $0
jmp label_95
label_94:
push $1
label_95:
pop %eax
cmp $0, %eax
je label_93
push -36(%ebp)
push $5
pop %edx
pop %eax
add %edx, %eax
push %eax
pop %edx
mov %edx,-36(%ebp)
mov 8(%ebp), %eax
push 28(%eax)
push $printstr
call printf
push $202
push $printstr
call printf
jmp label_92
label_93:
jmp label_88
label_89:
jmp label_77
label_76:
label_77:
jmp label_75
label_74:
label_75:
push $1
mov 8(%ebp), %eax
push 28(%eax)
pop %eax
xor $1, %eax
push %eax
pop %edx
pop %eax
or %edx, %eax
push %eax
push $printstr
call printf
jmp label_71
label_70:
push 16(%ebp)
pop %edx
mov %edx,-4(%ebp)
label_71:
push $9
pop %edx
mov %edx,-4(%ebp)
jmp label_66
label_67:
push 28(%ebp)
pop %edx
mov %edx,-4(%ebp)
push 28(%ebp)
pop %edx
mov %edx,-4(%ebp)
jmp label_62
label_63:
push $255
push $printstr
call printf
leave
ret
class2_f0:
push %ebp
mov %esp, %ebp
sub $24, %esp
push $87
pop %edx
mov %edx,-24(%ebp)
push $101
pop %edx
mov %edx,-20(%ebp)
push $0
pop %edx
mov %edx,-8(%ebp)
push $1
pop %edx
mov %edx,-4(%ebp)
push $154
push $15
pop %ebx
pop %eax
cdq
idiv %ebx
push %eax
push $159
pop %edx
pop %eax
cmp %edx, %eax
jle label_96
push $0
jmp label_97
label_96:
push $1
label_97:
pop %edx
mov %edx,-16(%ebp)
push $1
pop %edx
mov %edx,-12(%ebp)
push $173
pop %edx
mov %edx,-20(%ebp)
mov 8(%ebp),%eax
mov 8(%eax), %ebx
push 4(%ebx)
pop %edx
mov %edx,-20(%ebp)
push $52
push $printstr
call printf
push $1
pop %eax
leave
ret
class2_class2:
push %ebp
mov %esp, %ebp
sub $8, %esp
push $137
pop %edx
mov 8(%ebp), %eax
mov %edx, 20(%eax)
push $22
pop %edx
mov 8(%ebp), %eax
mov %edx, 16(%eax)
push $98
pop %edx
mov 8(%ebp), %eax
mov %edx, 4(%eax)
push $40
pop %edx
mov 8(%ebp), %eax
mov %edx, 0(%eax)
push $58
pop %edx
mov 8(%ebp), %eax
mov %edx, 12(%eax)
push $64
call malloc
add $4 , %esp
push %eax
mov %eax, %ecx
push $29
push $42
pop %ebx
pop %eax
imul %ebx, %eax
push %eax
push $147
pop %edx
pop %eax
cmp %edx, %eax
je label_98
push $0
jmp label_99
label_98:
push $1
label_99:
push $245
push $16
pop %ebx
pop %eax
imul %ebx, %eax
push %eax
push %ecx
call class0_class0
pop %ecx
pop %eax
pop %eax
pop %edx
mov 8(%ebp), %eax
mov %edx, 8(%eax)
mov 8(%ebp),%eax
mov 8(%eax), %ebx
push 8(%ebx)
pop %eax
cmp $0,  %eax
je label_100
push $1998
pop %edx
mov %edx,-4(%ebp)
label_102:
push $74
push -4(%ebp)
pop %edx
pop %eax
cmp %edx, %eax
jle label_104
push $0
jmp label_105
label_104:
push $1
label_105:
pop %eax
cmp $0, %eax
je label_103
push -4(%ebp)
push $3
pop %ebx
pop %eax
cdq
idiv %ebx
push %eax
pop %edx
mov %edx,-4(%ebp)
mov 8(%ebp),%eax
mov 8(%eax), %ebx
push 8(%ebx)
push $printstr
call printf
jmp label_102
label_103:
jmp label_101
label_100:
push $88
pop %eax
neg %eax
push %eax
pop %edx
mov %edx,-8(%ebp)
label_106:
push -8(%ebp)
push $58
pop %eax
neg %eax
push %eax
pop %edx
pop %eax
cmp %edx, %eax
jl label_108
push $0
jmp label_109
label_108:
push $1
label_109:
pop %eax
cmp $0, %eax
je label_107
push -8(%ebp)
push $6
pop %edx
pop %eax
add %edx, %eax
push %eax
pop %edx
mov %edx,-8(%ebp)
push $0
mov 8(%ebp), %eax
push 8(%eax)
call class0_f4
pop %edx
pop %edx
push $0
push $printstr
call printf
mov 8(%ebp), %eax
push 0(%eax)
push $printstr
call printf
jmp label_106
label_107:
mov 8(%ebp), %eax
push 12(%eax)
mov 8(%ebp),%eax
mov 8(%eax), %ebx
push 4(%ebx)
pop %edx
pop %eax
cmp %edx, %eax
jle label_110
push $0
jmp label_111
label_110:
push $1
label_111:
push $printstr
call printf
push $179
mov 8(%ebp), %eax
push 4(%eax)
pop %edx
pop %eax
cmp %edx, %eax
jle label_112
push $0
jmp label_113
label_112:
push $1
label_113:
push $printstr
call printf
label_101:
push $242
push $printstr
call printf
push 12(%ebp)
push $printstr
call printf
leave
ret
class3_f0:
push %ebp
mov %esp, %ebp
sub $0, %esp
push $0
pop %eax
leave
ret
class3_f1:
push %ebp
mov %esp, %ebp
sub $12, %esp
push $96
call malloc
add $4 , %esp
push %eax
mov %eax, %ecx
push $137
push $25
pop %edx
pop %eax
add %edx, %eax
push %eax
push $38
pop %edx
pop %eax
add %edx, %eax
push %eax
push $0
push $0
pop %eax
xor $1, %eax
push %eax
pop %edx
pop %eax
and %edx, %eax
push %eax
push %ecx
call class2_class2
pop %ecx
pop %eax
pop %eax
pop %edx
mov %edx,-4(%ebp)
push $7
pop %edx
mov -4(%ebp), %eax
mov %edx, 16(%eax)
push $87
pop %edx
mov %edx,-8(%ebp)
label_114:
push $37
push -8(%ebp)
pop %edx
pop %eax
cmp %edx, %eax
jle label_116
push $0
jmp label_117
label_116:
push $1
label_117:
pop %eax
cmp $0, %eax
je label_115
push -8(%ebp)
push $5
pop %eax
neg %eax
push %eax
pop %edx
pop %eax
add %edx, %eax
push %eax
pop %edx
mov %edx,-8(%ebp)
mov -4(%ebp), %eax
push 12(%eax)
push $printstr
call printf
push $1
push $0
pop %edx
pop %eax
or %edx, %eax
push %eax
pop %eax
cmp $0,  %eax
je label_118
push $93
pop %edx
mov %edx,-12(%ebp)
label_120:
push -12(%ebp)
push $2280
pop %edx
pop %eax
cmp %edx, %eax
jle label_122
push $0
jmp label_123
label_122:
push $1
label_123:
pop %eax
cmp $0, %eax
je label_121
push -12(%ebp)
push $3
pop %ebx
pop %eax
imul %ebx, %eax
push %eax
pop %edx
mov %edx,-12(%ebp)
mov -4(%ebp), %eax
push 20(%eax)
pop %edx
mov -4(%ebp), %eax
mov %edx, 12(%eax)
jmp label_120
label_121:
jmp label_119
label_118:
label_119:
jmp label_114
label_115:
push $176
push $51
pop %ebx
pop %eax
cdq
idiv %ebx
push %eax
pop %edx
mov -4(%ebp), %eax
mov %edx, 20(%eax)
push 12(%ebp)
pop %eax
neg %eax
push %eax
pop %eax
leave
ret
class3_f2:
push %ebp
mov %esp, %ebp
sub $16, %esp
push $22
pop %eax
neg %eax
push %eax
push $120
pop %edx
pop %eax
sub %edx, %eax
push %eax
pop %edx
mov %edx,-8(%ebp)
push $173
push $157
pop %edx
pop %eax
cmp %edx, %eax
jle label_124
push $0
jmp label_125
label_124:
push $1
label_125:
pop %edx
mov %edx,-4(%ebp)
push $1
pop %eax
xor $1, %eax
push %eax
pop %edx
mov %edx,-4(%ebp)
push $1
push $printstr
call printf
push $28
pop %eax
neg %eax
push %eax
pop %edx
mov %edx,-12(%ebp)
label_126:
push -12(%ebp)
push $3
pop %eax
neg %eax
push %eax
pop %edx
pop %eax
cmp %edx, %eax
jl label_128
push $0
jmp label_129
label_128:
push $1
label_129:
pop %eax
cmp $0, %eax
je label_127
push -12(%ebp)
push $5
pop %edx
pop %eax
add %edx, %eax
push %eax
pop %edx
mov %edx,-12(%ebp)
push $68
pop %eax
neg %eax
push %eax
pop %edx
mov %edx,-16(%ebp)
label_130:
push $70
pop %eax
neg %eax
push %eax
push -16(%ebp)
pop %edx
pop %eax
cmp %edx, %eax
jle label_132
push $0
jmp label_133
label_132:
push $1
label_133:
pop %eax
cmp $0, %eax
je label_131
push -16(%ebp)
push $1
pop %edx
pop %eax
sub %edx, %eax
push %eax
pop %edx
mov %edx,-16(%ebp)
mov 8(%ebp),%eax
mov 4(%eax), %ebx
push 20(%ebx)
push $241
pop %edx
pop %eax
sub %edx, %eax
push %eax
push $printstr
call printf
mov 8(%ebp),%eax
mov 4(%eax), %ebx
push 12(%ebx)
push $printstr
call printf
push $1
pop %edx
mov %edx,-4(%ebp)
jmp label_130
label_131:
push $209
pop %edx
mov %edx,-8(%ebp)
jmp label_126
label_127:
push $153
push $75
pop %edx
pop %eax
cmp %edx, %eax
jl label_136
push $0
jmp label_137
label_136:
push $1
label_137:
pop %eax
cmp $0,  %eax
je label_134
push 16(%ebp)
push $printstr
call printf
push $242
push $printstr
call printf
jmp label_135
label_134:
mov 8(%ebp),%eax
mov 4(%eax), %ebx
push 4(%ebx)
pop %edx
mov %edx,-8(%ebp)
label_135:
push $27
pop %eax
leave
ret
class3_class3:
push %ebp
mov %esp, %ebp
sub $20, %esp
push $96
call malloc
add $4 , %esp
push %eax
mov %eax, %ecx
push $81
push $0
pop %eax
xor $1, %eax
push %eax
push %ecx
call class2_class2
pop %ecx
pop %eax
pop %eax
pop %edx
mov 8(%ebp), %eax
mov %edx, 4(%eax)
push $73
pop %edx
mov 8(%ebp), %eax
mov %edx, 0(%eax)
push $0
pop %edx
mov %edx,-8(%ebp)
push $0
pop %edx
mov %edx,-4(%ebp)
push $91
pop %eax
neg %eax
push %eax
pop %edx
mov %edx,-12(%ebp)
label_138:
push -12(%ebp)
push $37
pop %eax
neg %eax
push %eax
pop %edx
pop %eax
cmp %edx, %eax
jle label_140
push $0
jmp label_141
label_140:
push $1
label_141:
pop %eax
cmp $0, %eax
je label_139
push -12(%ebp)
push $9
pop %edx
pop %eax
add %edx, %eax
push %eax
pop %edx
mov %edx,-12(%ebp)
push 8(%ebp)
call class3_f0
pop %edx
push %eax
pop %edx
mov %edx,-8(%ebp)
push $77
pop %edx
mov %edx,-16(%ebp)
label_142:
push $17
push -16(%ebp)
pop %edx
pop %eax
cmp %edx, %eax
jle label_144
push $0
jmp label_145
label_144:
push $1
label_145:
pop %eax
cmp $0, %eax
je label_143
push -16(%ebp)
push $4
pop %eax
neg %eax
push %eax
pop %edx
pop %eax
add %edx, %eax
push %eax
pop %edx
mov %edx,-16(%ebp)
mov 8(%ebp),%eax
mov 4(%eax), %ebx
push 4(%ebx)
push $62
pop %edx
pop %eax
sub %edx, %eax
push %eax
push $printstr
call printf
mov 8(%ebp),%eax
mov 4(%eax), %ebx
push 8(%ebx)
push $232
mov 8(%ebp),%eax
mov 4(%eax), %ebx
push 0(%ebx)
pop %edx
pop %eax
sub %edx, %eax
push %eax
mov 8(%ebp),%eax
mov 4(%eax), %ebx
push 12(%ebx)
push 12(%ebp)
pop %edx
pop %eax
add %edx, %eax
push %eax
push 8(%ebp)
call class3_f1
pop %edx
pop %edx
pop %edx
pop %edx
push %eax
push $24
pop %edx
pop %eax
cmp %edx, %eax
jl label_146
push $0
jmp label_147
label_146:
push $1
label_147:
pop %edx
mov %edx,-8(%ebp)
jmp label_142
label_143:
jmp label_138
label_139:
push $21
push $179
pop %edx
pop %eax
cmp %edx, %eax
jle label_148
push $0
jmp label_149
label_148:
push $1
label_149:
push $printstr
call printf
push $64
mov 8(%ebp),%eax
mov 4(%eax), %ebx
push 16(%ebx)
pop %edx
pop %eax
cmp %edx, %eax
jle label_150
push $0
jmp label_151
label_150:
push $1
label_151:
pop %edx
mov %edx,-4(%ebp)
push $27
pop %edx
mov %edx,-20(%ebp)
label_152:
push $3
push -20(%ebp)
pop %edx
pop %eax
cmp %edx, %eax
jl label_154
push $0
jmp label_155
label_154:
push $1
label_155:
pop %eax
cmp $0, %eax
je label_153
push -20(%ebp)
push $3
pop %ebx
pop %eax
cdq
idiv %ebx
push %eax
pop %edx
mov %edx,-20(%ebp)
push $145
mov 8(%ebp),%eax
mov 4(%eax), %ebx
push 4(%ebx)
pop %edx
pop %eax
sub %edx, %eax
push %eax
mov 8(%ebp), %eax
push 4(%eax)
call class2_f0
pop %edx
pop %edx
push %eax
push $printstr
call printf
jmp label_152
label_153:
leave
ret
class4_class4:
push %ebp
mov %esp, %ebp
sub $8, %esp
push $176
push $215
push $94
pop %ebx
pop %eax
imul %ebx, %eax
push %eax
push 8(%ebp)
call class3_class3
pop %edx
pop %edx
pop %edx
push $1
pop %eax
xor $1, %eax
push %eax
pop %edx
mov 8(%ebp), %eax
mov %edx, 16(%eax)
push $28
push $121
pop %ebx
pop %eax
imul %ebx, %eax
push %eax
pop %edx
mov 8(%ebp), %eax
mov %edx, 12(%eax)
push $96
call malloc
add $4 , %esp
push %eax
mov %eax, %ecx
push $222
push $1
push %ecx
call class2_class2
pop %ecx
pop %eax
pop %eax
pop %edx
mov 8(%ebp), %eax
mov %edx, 8(%eax)
push $0
pop %edx
mov %edx,-8(%ebp)
push $1
push $1
pop %edx
pop %eax
and %edx, %eax
push %eax
pop %edx
mov %edx,-4(%ebp)
push $167
mov 8(%ebp), %eax
push 8(%eax)
call class2_f0
pop %edx
pop %edx
push %eax
pop %edx
mov %edx,-8(%ebp)
leave
ret
Main_main:
push %ebp
mov %esp, %ebp
sub $48, %esp
push $32
call malloc
add $4 , %esp
push %eax
mov %eax, %ecx
push $250
push $64
pop %ebx
pop %eax
imul %ebx, %eax
push %eax
push $61
pop %ebx
pop %eax
imul %ebx, %eax
push %eax
push $47
push $162
pop %edx
pop %eax
add %edx, %eax
push %eax
push $62
pop %edx
pop %eax
sub %edx, %eax
push %eax
push %ecx
call class3_class3
pop %ecx
pop %eax
pop %eax
pop %edx
mov %edx,-24(%ebp)
push $59
pop %edx
mov %edx,-20(%ebp)
push $0
pop %edx
mov %edx,-8(%ebp)
push $21
pop %edx
mov %edx,-4(%ebp)
push $0
pop %edx
mov %edx,-16(%ebp)
push $64
call malloc
add $4 , %esp
push %eax
mov %eax, %ecx
push $0
pop %eax
xor $1, %eax
push %eax
push $89
push %ecx
call class0_class0
pop %ecx
pop %eax
pop %eax
pop %edx
mov %edx,-12(%ebp)
push $133
push $printstr
call printf
push -8(%ebp)
pop %eax
cmp $0,  %eax
je label_156
push $43
pop %eax
neg %eax
push %eax
pop %edx
mov %edx,-28(%ebp)
label_158:
push -28(%ebp)
push $34
pop %eax
neg %eax
push %eax
pop %edx
pop %eax
cmp %edx, %eax
jl label_160
push $0
jmp label_161
label_160:
push $1
label_161:
pop %eax
cmp $0, %eax
je label_159
push -28(%ebp)
push $3
pop %ebx
pop %eax
imul %ebx, %eax
push %eax
pop %edx
mov %edx,-28(%ebp)
push $1
push $printstr
call printf
push $104
push $printstr
call printf
push -16(%ebp)
push $printstr
call printf
jmp label_158
label_159:
push -20(%ebp)
push $63
pop %ebx
pop %eax
imul %ebx, %eax
push %eax
push $printstr
call printf
push $68
pop %edx
mov %edx,-32(%ebp)
label_162:
push -32(%ebp)
push $1048644
pop %edx
pop %eax
cmp %edx, %eax
jle label_164
push $0
jmp label_165
label_164:
push $1
label_165:
pop %eax
cmp $0, %eax
je label_163
push -32(%ebp)
push $4
pop %ebx
pop %eax
imul %ebx, %eax
push %eax
pop %edx
mov %edx,-32(%ebp)
push $37
pop %eax
neg %eax
push %eax
pop %edx
mov %edx,-4(%ebp)
jmp label_162
label_163:
jmp label_157
label_156:
label_157:
push $103
push $printstr
call printf
push $174
pop %edx
mov %edx,-4(%ebp)
push $8192
pop %edx
mov %edx,-36(%ebp)
label_166:
push $64
push -36(%ebp)
pop %edx
pop %eax
cmp %edx, %eax
jle label_168
push $0
jmp label_169
label_168:
push $1
label_169:
pop %eax
cmp $0, %eax
je label_167
push -36(%ebp)
push $2
pop %ebx
pop %eax
cdq
idiv %ebx
push %eax
pop %edx
mov %edx,-36(%ebp)
push $0
push $0
pop %edx
pop %eax
or %edx, %eax
push %eax
push $printstr
call printf
push -8(%ebp)
push -8(%ebp)
pop %edx
pop %eax
or %edx, %eax
push %eax
pop %eax
xor $1, %eax
push %eax
pop %eax
cmp $0,  %eax
je label_170
push -24(%ebp)
call class3_f0
pop %edx
push %eax
pop %edx
mov %edx,-16(%ebp)
jmp label_171
label_170:
push $11
pop %eax
neg %eax
push %eax
pop %edx
mov %edx,-40(%ebp)
label_172:
push -40(%ebp)
push $4085
pop %edx
pop %eax
cmp %edx, %eax
jle label_174
push $0
jmp label_175
label_174:
push $1
label_175:
pop %eax
cmp $0, %eax
je label_173
push -40(%ebp)
push $4
pop %ebx
pop %eax
imul %ebx, %eax
push %eax
pop %edx
mov %edx,-40(%ebp)
push $448
pop %edx
mov %edx,-44(%ebp)
label_176:
push $7
push -44(%ebp)
pop %edx
pop %eax
cmp %edx, %eax
jl label_178
push $0
jmp label_179
label_178:
push $1
label_179:
pop %eax
cmp $0, %eax
je label_177
push -44(%ebp)
push $4
pop %ebx
pop %eax
cdq
idiv %ebx
push %eax
pop %edx
mov %edx,-44(%ebp)
push -8(%ebp)
push $printstr
call printf
mov -24(%ebp), %eax
push 0(%eax)
push $printstr
call printf
push $43
pop %edx
mov %edx,-4(%ebp)
jmp label_176
label_177:
jmp label_172
label_173:
label_171:
jmp label_166
label_167:
push -4(%ebp)
push -20(%ebp)
pop %edx
pop %eax
cmp %edx, %eax
jle label_180
push $0
jmp label_181
label_180:
push $1
label_181:
pop %edx
mov -12(%ebp), %eax
mov %edx, 12(%eax)
push $220
pop %edx
mov %edx,-4(%ebp)
push $41
pop %edx
mov %edx,-48(%ebp)
label_182:
push -48(%ebp)
push $770
pop %edx
pop %eax
cmp %edx, %eax
jl label_184
push $0
jmp label_185
label_184:
push $1
label_185:
pop %eax
cmp $0, %eax
je label_183
push -48(%ebp)
push $3
pop %ebx
pop %eax
imul %ebx, %eax
push %eax
pop %edx
mov %edx,-48(%ebp)
push -8(%ebp)
pop %eax
cmp $0,  %eax
je label_186
push -16(%ebp)
push -8(%ebp)
pop %eax
xor $1, %eax
push %eax
pop %edx
pop %eax
or %edx, %eax
push %eax
pop %edx
mov %edx,-8(%ebp)
jmp label_187
label_186:
push -4(%ebp)
push $149
pop %edx
pop %eax
cmp %edx, %eax
jle label_188
push $0
jmp label_189
label_188:
push $1
label_189:
pop %edx
mov %edx,-8(%ebp)
label_187:
push $103
pop %edx
mov -24(%ebp), %eax
mov %edx, 0(%eax)
jmp label_182
label_183:
push -24(%ebp)
call class3_f0
pop %edx
push %eax
pop %eax
cmp $0,  %eax
je label_190
push -4(%ebp)
pop %edx
mov %edx,-20(%ebp)
push -16(%ebp)
pop %eax
cmp $0,  %eax
je label_192
push $165
pop %edx
mov -12(%ebp), %eax
mov %edx, 0(%eax)
push $208
push -4(%ebp)
pop %ebx
pop %eax
cdq
idiv %ebx
push %eax
push $printstr
call printf
jmp label_193
label_192:
push -8(%ebp)
push $printstr
call printf
push -4(%ebp)
pop %edx
mov %edx,-4(%ebp)
label_193:
push $0
pop %eax
xor $1, %eax
push %eax
push $printstr
call printf
jmp label_191
label_190:
push $0
pop %edx
mov -12(%ebp), %eax
mov %edx, 12(%eax)
label_191:
leave
ret
